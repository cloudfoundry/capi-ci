---
# PINNED VERSIONS
# To pin a version of a git resource, include the commit hash in the list here:
#
# version_pins:
# - &BOSH_DEPLOYMENT_VERSION 3f4466a51a74dadbff6612e7d2b79d2802668469
#
# And then reference it whenever you `get` that resource:
#
#      - get: bosh-deployment
#        version: { ref: *BOSH_DEPLOYMENT_VERSION }
##

groups:
  - name: capi-release
    jobs:
      - cc-unit-tests
      - bridge-unit-tests
      - verify-capi-release-commits
      - capi-release-template-tests
      - bump-capi-release
      - create-capi-release
      - elsa-ha-acquire-pool
      - elsa-ha-deploy-cf
      - elsa-ha-tests
      - kiki-back-compat-migrations
      - asha-mysql-acquire-pool
      - asha-mysql-deploy-cf
      - asha-mysql-tests
      - asha-mysql-destroy-cf
      - olaf-mysql-acquire-pool
      - olaf-mysql-deploy-cf
      - olaf-mysql-tests
      - olaf-mysql-destroy-cf
      - scar-psql-acquire-pool
      - scar-psql-deploy-cf
      - scar-psql-tests
      - scar-psql-destroy-cf
      - bump-ci-passed
  - name: ship-it
    jobs:
      - ship-it
      - bump-cc-v2-api
      - bump-cc-v3-api
      - update-api-info-v2-docs
      - push-github-release
      - publish-docs-v3
      - merge-capi-release-main
  - name: dependencies-docs
    jobs:
      - rc-docs-v3
  - name: bump-dependencies
    jobs:
      - bump-golang-package
      - bump-valkey-blob
  - name: bbl-up
    jobs:
      - elsa-ha-acquire-bbl-up-pool
      - asha-mysql-acquire-bbl-up-pool
      - olaf-mysql-acquire-bbl-up-pool
      - scar-psql-acquire-bbl-up-pool
      - bbl-up-elsa-ha
      - bbl-up-kiki-mig
      - bbl-up-asha-mysql
      - bbl-up-olaf-mysql
      - bbl-up-scar-psql
  - name: bbl-destroy
    jobs:
      - elsa-ha-release-pool-manual
      - asha-mysql-release-pool-manual
      - olaf-mysql-release-pool-manual
      - scar-psql-release-pool-manual
      - emergency-bbl-destroy-elsa-ha
      - manual-cf-bbl-destroy-kiki-mig
      - manual-bbl-destroy-asha-mysql
      - manual-bbl-destroy-olaf-mysql
      - manual-bbl-destroy-scar-psql
resource_types:
  - name: gcs-resource
    type: registry-image
    source:
      repository: frodenas/gcs-resource
resources:
  #   schedules
  - name: nightly
    type: time
    icon: clock-outline
    source:
      location: America/Los_Angeles
      start: 22:30
      stop: 23:00
  - name: weekly-sunday
    type: time
    icon: clock-outline
    source:
      location: America/Los_Angeles
      start: 23:00
      stop: 23:30
      days:
        - Sunday
  - name: capi-ci
    type: git
    icon: git
    source:
      uri: https://github.com/cloudfoundry/capi-ci.git
      branch: main
  - name: capi-release-main
    type: git
    icon: git
    source:
      uri: https://github.com/cloudfoundry/capi-release.git
      branch: main
      username: ((ari-wg-gitbot-username))
      password: ((ari-wg-gitbot-token))
  - name: capi-release-develop
    type: git
    icon: git
    source:
      uri: https://github.com/cloudfoundry/capi-release.git
      branch: develop
      username: ((ari-wg-gitbot-username))
      password: ((ari-wg-gitbot-token))
  - name: capi-release-ci-passed
    type: git
    icon: git
    source:
      uri: https://github.com/cloudfoundry/capi-release.git
      branch: ci-passed
      username: ((ari-wg-gitbot-username))
      password: ((ari-wg-gitbot-token))
  - name: capi-release-tarball
    type: gcs-resource
    icon: google-cloud
    source:
      bucket: capi-releases-app-runtime-interfaces
      regexp: capi-(.*)-.*-.*.tgz
      json_key: ((capi-release-blobs-uploader_key))
  - name: capi-final-releases
    type: gcs-resource
    icon: google-cloud
    source:
      bucket: capi-final-releases-app-runtime-interfaces
      regexp: capi-(.*)-.*-.*.tgz
      json_key: ((capi-release-blobs-uploader_key))
  - name: next-version
    type: semver
    icon: counter
    source:
      driver: gcs
      bucket: capi-release-versions-app-runtime-interfaces
      key: current-capi-release-version
      json_key: ((capi-release-blobs-uploader_key))
      initial_version: 1.176.0
  - name: cc-api-v3-version
    type: semver
    icon: counter
    source:
      driver: git
      uri: https://github.com/cloudfoundry/cloud_controller_ng.git
      branch: main
      file: config/version
      username: ((ari-wg-gitbot-username))
      password: ((ari-wg-gitbot-token))
      git_user: ((ari-wg-gitbot-email))
  - name: cc-api-v2-version
    type: semver
    icon: counter
    source:
      driver: git
      uri: https://github.com/cloudfoundry/cloud_controller_ng.git
      branch: main
      file: config/version_v2
      username: ((ari-wg-gitbot-username))
      password: ((ari-wg-gitbot-token))
      git_user: ((ari-wg-gitbot-email))
  - name: github-release
    type: github-release
    icon: github
    source:
      user: cloudfoundry
      repository: capi-release
      drafts: true
      access_token: ((ari-wg-gitbot-token))
  - name: github-published-release
    type: github-release
    icon: github
    source:
      user: cloudfoundry
      repository: capi-release
      drafts: false
      access_token: ((ari-wg-gitbot-token))
  - name: cc-uploader
    type: git
    icon: git
    source:
      uri: https://github.com/cloudfoundry/cc-uploader.git
      branch: main
      username: ((ari-wg-gitbot-username))
      password: ((ari-wg-gitbot-token))
  - name: tps
    type: git
    icon: git
    source:
      uri: https://github.com/cloudfoundry/tps.git
      branch: master
      username: ((ari-wg-gitbot-username))
      password: ((ari-wg-gitbot-token))
  - name: cloud_controller_ng
    type: git
    icon: git
    source:
      uri: https://github.com/cloudfoundry/cloud_controller_ng.git
      branch: main
      username: ((ari-wg-gitbot-username))
      password: ((ari-wg-gitbot-token))
  - name: cc-api-gh-pages
    type: git
    icon: git
    source:
      uri: https://github.com/cloudfoundry/cloud_controller_ng.git
      branch: gh-pages
      username: ((ari-wg-gitbot-username))
      password: ((ari-wg-gitbot-token))
  - name: golang-release
    type: git
    icon: git
    source:
      uri: https://github.com/cloudfoundry/bosh-package-golang-release
      branch: main
      username: ((ari-wg-gitbot-username))
      password: ((ari-wg-gitbot-token))
      tag_filter: v*
  - name: diego-release
    type: git
    icon: git
    source:
      uri: https://github.com/cloudfoundry/diego-release.git
      branch: release
      username: ((ari-wg-gitbot-username))
      password: ((ari-wg-gitbot-token))
  - name: cf-deployment
    type: git
    icon: git
    source:
      uri: https://github.com/cloudfoundry/cf-deployment.git
      branch: main
      username: ((ari-wg-gitbot-username))
      password: ((ari-wg-gitbot-token))
  - name: cf-acceptance-tests
    type: git
    icon: git
    source:
      uri: https://github.com/cloudfoundry/cf-acceptance-tests.git
      branch: release-candidate
      username: ((ari-wg-gitbot-username))
      password: ((ari-wg-gitbot-token))
  - name: capi-bara-tests
    type: git
    icon: git
    source:
      uri: https://github.com/cloudfoundry/capi-bara-tests.git
      branch: main
      username: ((ari-wg-gitbot-username))
      password: ((ari-wg-gitbot-token))
  - name: sync-integration-tests
    type: git
    icon: git
    source:
      uri: https://github.com/cloudfoundry/sync-integration-tests.git
      branch: master
      username: ((ari-wg-gitbot-username))
      password: ((ari-wg-gitbot-token))
  - name: cf-deployment-concourse-tasks
    type: git
    icon: git
    source:
      uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks.git
      branch: main
      username: ((ari-wg-gitbot-username))
      password: ((ari-wg-gitbot-token))
  - name: runtime-ci
    type: git
    icon: git
    source:
      uri: https://github.com/cloudfoundry/runtime-ci.git
      branch: main
      username: ((ari-wg-gitbot-username))
      password: ((ari-wg-gitbot-token))
  - name: valkey-release
    type: github-release
    icon: github
    source:
      owner: valkey-io
      repository: valkey
      semver_constraint: 7.2.x
      pre_release: false
      access_token: ((ari-wg-gitbot-token))
  # Elsa resources
  - name: elsa-ha-bbl-state
    type: git
    icon: git
    source:
      uri: https://github.com/cloudfoundry/capi-ci-private.git
      branch: main
      username: ((ari-wg-gitbot-username))
      password: ((ari-wg-gitbot-token))
  - name: elsa-ha-integration-configs
    type: git
    icon: git
    source:
      uri: https://github.com/cloudfoundry/capi-ci-private.git
      branch: main
      username: ((ari-wg-gitbot-username))
      password: ((ari-wg-gitbot-token))
  - name: elsa-ha-pool
    type: pool
    icon: cloud-lock-outline
    source:
      uri: https://github.com/cloudfoundry/capi-ci-private.git
      branch: ari-bbl-env-pool
      pool: elsa-ha
      username: ((ari-wg-gitbot-username))
      password: ((ari-wg-gitbot-token))
  # Kiki resources
  - name: kiki-mig-bbl-state
    type: git
    icon: git
    source:
      uri: https://github.com/cloudfoundry/capi-ci-private.git
      branch: main
      username: ((ari-wg-gitbot-username))
      password: ((ari-wg-gitbot-token))
  - name: kiki-integration-configs
    type: git
    icon: git
    source:
      uri: https://github.com/cloudfoundry/capi-ci-private.git
      branch: main
      username: ((ari-wg-gitbot-username))
      password: ((ari-wg-gitbot-token))
  # Asha resources
  - name: asha-mysql-bbl-state
    type: git
    icon: git
    source:
      uri: https://github.com/cloudfoundry/capi-ci-private.git
      branch: main
      username: ((ari-wg-gitbot-username))
      password: ((ari-wg-gitbot-token))
  - name: asha-mysql-integration-configs
    type: git
    icon: git
    source:
      uri: https://github.com/cloudfoundry/capi-ci-private.git
      branch: main
      username: ((ari-wg-gitbot-username))
      password: ((ari-wg-gitbot-token))
  - name: asha-mysql-pool
    type: pool
    icon: cloud-lock-outline
    source:
      uri: https://github.com/cloudfoundry/capi-ci-private.git
      branch: ari-bbl-env-pool
      pool: asha-mysql
      username: ((ari-wg-gitbot-username))
      password: ((ari-wg-gitbot-token))
  # Olaf resources
  - name: olaf-mysql-bbl-state
    type: git
    icon: git
    source:
      uri: https://github.com/cloudfoundry/capi-ci-private.git
      branch: main
      username: ((ari-wg-gitbot-username))
      password: ((ari-wg-gitbot-token))
  - name: olaf-mysql-integration-configs
    type: git
    icon: git
    source:
      uri: https://github.com/cloudfoundry/capi-ci-private.git
      branch: main
      username: ((ari-wg-gitbot-username))
      password: ((ari-wg-gitbot-token))
  - name: olaf-mysql-pool
    type: pool
    icon: cloud-lock-outline
    source:
      uri: https://github.com/cloudfoundry/capi-ci-private.git
      branch: ari-bbl-env-pool
      pool: olaf-mysql
      username: ((ari-wg-gitbot-username))
      password: ((ari-wg-gitbot-token))
  # Scar resources
  - name: scar-psql-bbl-state
    type: git
    icon: git
    source:
      uri: https://github.com/cloudfoundry/capi-ci-private.git
      branch: main
      username: ((ari-wg-gitbot-username))
      password: ((ari-wg-gitbot-token))
  - name: scar-psql-integration-configs
    type: git
    icon: git
    source:
      uri: https://github.com/cloudfoundry/capi-ci-private.git
      branch: main
      username: ((ari-wg-gitbot-username))
      password: ((ari-wg-gitbot-token))
  - name: scar-psql-pool
    type: pool
    icon: cloud-lock-outline
    source:
      uri: https://github.com/cloudfoundry/capi-ci-private.git
      branch: ari-bbl-env-pool
      pool: scar-psql
      username: ((ari-wg-gitbot-username))
      password: ((ari-wg-gitbot-token))
jobs:
  - name: bump-golang-package
    plan:
      - in_parallel:
          - get: capi-ci
          - get: capi-release
            resource: capi-release-develop
          - get: golang-release
            trigger: true
      - task: update-golang-package
        file: capi-ci/ci/update-packages/update_golang_package.yml
        params:
          GO_VERSION: 1
          PRIVATE_YAML: ((capi_release_private_yaml))
      - put: capi-release-develop
        params:
          repository: updated-capi-release
          rebase: true
  - name: bump-valkey-blob
    plan:
      - in_parallel:
          - get: capi-ci
          - get: capi-release
            resource: capi-release-develop
          - get: valkey-release
            trigger: true
            params:
              include_source_tarball: true
      - task: update-valkey-blob
        file: capi-ci/ci/update-packages/update_valkey_blob.yml
        params:
          PRIVATE_YAML: ((capi_release_private_yaml))
      - put: capi-release-develop
        params:
          repository: updated-capi-release
          rebase: true
  - name: cc-unit-tests
    plan:
      - in_parallel:
          - get: capi-ci
          - get: cloud_controller_ng
            trigger: true
      - in_parallel:
          - task: run-cc-unit-tests-mysql
            attempts: 3
            file: capi-ci/ci/test-unit/run_cc_unit_tests.yml
            privileged: true
            params:
              DB: mysql
              RUN_IN_PARALLEL: true
          - task: run-cc-unit-tests-postgres
            attempts: 3
            file: capi-ci/ci/test-unit/run_cc_unit_tests.yml
            privileged: true
            params:
              DB: postgres
              RUN_IN_PARALLEL: true
  - name: verify-capi-release-commits
    plan:
      - in_parallel:
          - get: capi-ci
          - get: capi-release
            resource: capi-release-main
            trigger: true
      - task: run-capi-release-commit-test
        file: capi-ci/ci/test-unit/run_capi_release_commit_test.yml
  - name: capi-release-template-tests
    plan:
      - in_parallel:
          - get: capi-ci
          - get: capi-release
            resource: capi-release-develop
            trigger: true
      - in_parallel:
          - task: run-capi-release-config-template-tests
            attempts: 3
            file: capi-ci/ci/test-unit/run_capi_release_config_template_tests.yml
  - name: bump-capi-release
    plan:
      - in_parallel:
          - get: capi-ci
          - get: capi-release
            resource: capi-release-develop
            passed:
              - capi-release-template-tests
              - bridge-unit-tests
            trigger: true
          - get: cloud_controller_ng
            passed:
              - cc-unit-tests
            trigger: true
          - get: cc-uploader
            passed:
              - bridge-unit-tests
            trigger: true
          - get: tps
            passed:
              - bridge-unit-tests
            trigger: true
      - task: bump-capi-release
        file: capi-ci/ci/git/bump_capi_release.yml
      - put: capi-release-develop
        params:
          repository: bumped/capi-release
          rebase: true
  - name: bridge-unit-tests
    plan:
      - in_parallel:
          - get: capi-ci
          - get: capi-release
            resource: capi-release-develop
            trigger: true
          - get: cc-uploader
            trigger: true
          - get: tps
            trigger: true
          - get: diego-release
            params:
              submodules:
                - src/code.cloudfoundry.org/bbs
                - src/code.cloudfoundry.org/locket
          - get: weekly-sunday
            trigger: true
      - task: run-bridge-unit-tests
        attempts: 3
        file: capi-ci/ci/test-unit/run_bridge_unit_tests.yml
  - name: create-capi-release
    serial_groups:
      - version
    serial: true
    plan:
      - in_parallel:
          - get: next-version
            params:
              pre: rc
          - get: capi-ci
          - get: capi-release
            resource: capi-release-develop
            passed:
              - bump-capi-release
            trigger: true
            params:
              submodules:
                - src/cloud_controller_ng
      - put: next-version
        params:
          file: next-version/version
      - task: create-capi-release
        file: capi-ci/ci/bosh/create_capi_release.yml
      - put: capi-release-tarball
        params:
          file: created-capi-release/capi-*.tgz
  - name: kiki-back-compat-migrations
    serial: true
    serial_groups:
      - kiki-mig
    plan:
      - in_parallel:
          - get: cf-deployment-concourse-tasks
          - get: kiki-mig-bbl-state
          - get: cf-deployment
          - get: runtime-ci
          - get: kiki-integration-configs
          - get: capi-ci
          - get: capi-release-tarball
            passed:
              - create-capi-release
            trigger: true
          - get: cf-acceptance-tests
          - get: sync-integration-tests
      - task: delete-deployment
        file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
        input_mapping:
          bbl-state: kiki-mig-bbl-state
        params:
          BBL_STATE_DIR: kiki-mig
      - task: stemcell-upload
        file: cf-deployment-concourse-tasks/bosh-upload-stemcells/task.yml
        input_mapping:
          bbl-state: kiki-mig-bbl-state
        params:
          BBL_STATE_DIR: kiki-mig
      - task: collect-ops-files
        file: cf-deployment-concourse-tasks/collect-ops-files/task.yml
        input_mapping:
          base-ops-files: cf-deployment
          new-ops-files: capi-ci
        params:
          NEW_OPS_FILES: |
            cf-deployment-operations/scale-up-cells.yml
            cf-deployment-operations/scale-generic-worker-processes.yml
            cf-deployment-operations/disable-uaa-get-requests.yml
            cf-deployment-operations/seed-credhub-asg.yml
            cf-deployment-operations/seed-uaa-asg.yml
            cf-deployment-operations/log-all-sequel-activity.yml
      - task: deploy
        file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
        input_mapping:
          bbl-state: kiki-mig-bbl-state
          ops-files: collected-ops-files
          vars-files: kiki-mig-bbl-state
        params:
          BBL_STATE_DIR: kiki-mig
          SYSTEM_DOMAIN: &kiki-domain cf.kiki.app-runtime-interfaces.ci.cloudfoundry.org
          OPS_FILES: |
            base-ops-files/operations/use-compiled-releases.yml
            base-ops-files/operations/use-postgres.yml
            scale-up-cells.yml
            scale-generic-worker-processes.yml
            disable-uaa-get-requests.yml
            seed-credhub-asg.yml
            base-ops-files/operations/test/speed-up-dynamic-asgs.yml
            seed-uaa-asg.yml
            log-all-sequel-activity.yml
      - task: ensure-api-healthy
        file: runtime-ci/tasks/ensure-api-healthy/task.yml
        input_mapping:
          cats-integration-config: kiki-integration-configs
        params:
          CONFIG_FILE_PATH: kiki/cats_integration_config.json
      - task: apply-latest-migrations
        file: capi-ci/ci/migrations/apply_latest_migrations.yml
        input_mapping:
          capi-ci-private: kiki-mig-bbl-state
        params:
          BBL_STATE_DIR: kiki-mig
      - task: updated-integration-configs
        file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
        input_mapping:
          bbl-state: kiki-mig-bbl-state
          integration-configs: kiki-integration-configs
        params:
          CATS_INTEGRATION_CONFIG_FILE: kiki-mig/cats_integration_config.json
          BBL_STATE_DIR: kiki-mig
          SYSTEM_DOMAIN: *kiki-domain
        ensure:
          put: kiki-integration-configs
          params:
            repository: updated-integration-configs
            rebase: true
      - task: enable-feature-flags
        file: cf-deployment-concourse-tasks/set-feature-flags/task.yml
        input_mapping:
          bbl-state: kiki-mig-bbl-state
        params:
          SYSTEM_DOMAIN: *kiki-domain
          BBL_STATE_DIR: kiki-mig
          ENABLED_FEATURE_FLAGS: diego_docker
      - in_parallel:
          - task: acceptance-tests
            attempts: 3
            file: cf-deployment-concourse-tasks/run-cats/task.yml
            input_mapping:
              integration-config: updated-integration-configs
            params:
              NODES: 10
              CONFIG_FILE_PATH: kiki-mig/cats_integration_config.json
              CAPTURE_LOGS: true
          - task: sync-integration-tests
            attempts: 3
            file: sync-integration-tests/concourse/task_with_credhub.yml
            input_mapping:
              environment: updated-integration-configs
            params:
              BOSH_DEPLOYMENT_NAME: cf
              BOSH_API_INSTANCE: api/0
              CF_API_TARGET: https://api.cf.kiki.app-runtime-interfaces.ci.cloudfoundry.org
              CF_SKIP_SSL_VALIDATION: true
              CF_APPS_DOMAIN: *kiki-domain
              BBL_STATE_DIR: kiki-mig
              USE_CREDHUB: true
              RUN_REVISIONS_TESTS: true
              FLAKE_ATTEMPTS: 2
  - name: ship-it
    serial_groups:
      - version
    plan:
      - in_parallel:
          - get: cloud_controller_ng
#            passed:
#              - bump-ci-passed
          - get: capi-ci
          - get: capi-release
            resource: capi-release-ci-passed
            passed:
              - bump-ci-passed
          - get: capi-release-tarball
#            passed:
#              - bump-ci-passed
          - get: next-version
            params:
              bump: final
      - put: next-version
        params:
          file: next-version/version
      - task: finalize-release
        file: capi-ci/ci/bosh/finalize-release.yml
        params:
          PRIVATE_YAML: ((capi_release_private_yaml))
      - put: capi-final-releases
        params:
          file: finalized-release-tarball/capi-*.tgz
      - put: capi-release
        resource: capi-release-main
        params:
          repository: finalized-release-git-repo/capi-release
          tag: next-version/version
      - put: next-version
        params:
          bump: minor
  - name: push-github-release
    serial_groups:
      - version
    plan:
      - in_parallel:
          - get: capi-ci
          - get: capi-release
            resource: capi-release-main
            passed:
              - ship-it
          - get: capi-final-releases
            passed:
              - ship-it
            trigger: true
          - get: github-published-release
            params:
              globs: []
      - task: generate-github-release
        file: capi-ci/ci/git/generate_github_release.yml
      - put: github-release
        params:
          body: generated-release/body
          commitish: generated-release/commitish
          name: generated-release/name
          tag: generated-release/version
          globs:
            - generated-release/*.tgz
  - name: rc-docs-v3
    serial: true
    plan:
      - in_parallel:
          - get: capi-release
            resource: capi-release-ci-passed
            trigger: true
            params:
              submodules:
                - src/cloud_controller_ng
          - get: capi-ci
          - get: cc-api-gh-pages
      - task: push-rc-docs-v3
        file: capi-ci/ci/docs/push_docs_v3.yml
        params:
          VERSION: release-candidate
      - put: cc-api-gh-pages
        params:
          repository: updated-gh-pages
  - name: bump-cc-v3-api
    serial: true
    plan:
      - in_parallel:
          # we are using version as an input to gate on ship-it using a cheap to get resource
          # it is not actually a necessary input for this job
          - get: next-version
            passed:
              - ship-it
            trigger: true
          - get: cc-api-v3-version
      - put: cc-api-v3-version
        params:
          bump: minor
  - name: bump-cc-v2-api
    serial: true
    plan:
      - in_parallel:
          # we are using version as an input to gate on ship-it using a cheap to get resource
          # it is not actually a necessary input for this job
          - get: next-version
            passed:
              - ship-it
            trigger: true
          - get: cc-api-v2-version
      - put: cc-api-v2-version
        params:
          bump: minor
  - name: update-api-info-v2-docs
    serial: true
    plan:
      - in_parallel:
          - get: cc-api-v2-version
            passed:
              - bump-cc-v2-api
            trigger: true
          - get: capi-ci
          - get: cloud_controller_ng
      - task: update-api-info-v2-docs
        file: capi-ci/ci/docs/update_v2_docs_info_api_version.yml
      - put: cloud_controller_ng
        params:
          repository: cloud_controller_ng_bumped_docs/cloud_controller_ng
          rebase: true
  - name: publish-docs-v3
    serial: true
    plan:
      - in_parallel:
          - get: capi-ci
          - get: capi-release
            resource: capi-release-main
            trigger: true
            passed:
              - ship-it
            params:
              submodules:
                - src/cloud_controller_ng
          - get: cc-api-gh-pages
      - task: push-docs-v3
        file: capi-ci/ci/docs/push_docs_v3.yml
      - put: cc-api-gh-pages
        params:
          repository: updated-gh-pages
  - name: elsa-ha-acquire-bbl-up-pool
    serial: true
    plan:
      - in_parallel:
          - get: nightly
            trigger: true
          - put: elsa-ha-pool
            params:
              acquire: true
        timeout: 4h
  - name: elsa-ha-release-pool-manual
    plan:
      - get: elsa-ha-pool
    ensure:
      try:
        put: elsa-ha-pool
        params:
          release: elsa-ha-pool
  - name: bbl-up-elsa-ha
    serial: true
    serial_groups:
      - elsa-ha
    plan:
      - in_parallel:
          - get: cf-deployment-concourse-tasks
          - get: elsa-ha-bbl-state
          - get: capi-ci
          - get: elsa-ha-pool
            passed:
              - elsa-ha-acquire-bbl-up-pool
            trigger: true
      - task: bbl-up-elsa-ha
        file: cf-deployment-concourse-tasks/bbl-up/task.yml
        input_mapping:
          bbl-state: elsa-ha-bbl-state
          bbl-config: elsa-ha-bbl-state
        params:
          BBL_STATE_DIR: elsa-ha/bbl-state
          BBL_CONFIG_DIR: elsa-ha/bbl-config
          BBL_IAAS: gcp
          BBL_ENV_NAME: elsa-ha
          BBL_GCP_SERVICE_ACCOUNT_KEY: ((capi-bbl-elsa-ha-service-account))
          BBL_GCP_PROJECT_ID: app-runtime-interfaces-wg
          BBL_GCP_REGION: europe-west3
          BBL_LB_CERT: ((elsa_lb.certificate))
          BBL_LB_KEY: ((elsa_lb.private_key))
          LB_DOMAIN: &elsa-ha-domain cf.elsa.app-runtime-interfaces.ci.cloudfoundry.org
          TRUSTED_CA: ((relint_ca.certificate))
        ensure:
          put: elsa-ha-bbl-state
          params:
            repository: updated-bbl-state
            rebase: true
      - task: create-dns-record
        attempts: 3
        file: capi-ci/ci/bbl-tasks/create-dns-record.yml
        input_mapping:
          bbl-state: updated-bbl-state
        params:
          BBL_STATE_DIR: elsa-ha/bbl-state
          DNS_DOMAIN: *elsa-ha-domain
          GCP_DNS_SERVICE_ACCOUNT_KEY: ((capi-bbl-dns-service-account))
          GCP_PROJECT_ID: app-runtime-interfaces-wg
          SHARED_DNS_ZONE_NAME: app-runtime-interfaces
      - task: run-bosh-cleanup
        file: capi-ci/ci/bbl-tasks/run-bosh-cleanup.yml
        input_mapping:
          bbl-state: updated-bbl-state
        params:
          BBL_STATE_DIR: elsa-ha/bbl-state
      - put: elsa-ha-pool
        params:
          release: elsa-ha-pool
  - name: bbl-up-kiki-mig
    serial: true
    serial_groups:
      - kiki-mig
    plan:
      - in_parallel:
          - get: nightly
            trigger: true
          - get: cf-deployment-concourse-tasks
          - get: kiki-mig-bbl-state
          - get: capi-ci
      - task: bbl-up-kiki-mig
        file: cf-deployment-concourse-tasks/bbl-up/task.yml
        input_mapping:
          bbl-state: kiki-mig-bbl-state
          bbl-config: kiki-mig-bbl-state
        params:
          BBL_STATE_DIR: kiki-mig
          BBL_IAAS: gcp
          BBL_ENV_NAME: kiki-mig
          BBL_GCP_SERVICE_ACCOUNT_KEY: ((capi-bbl-kiki-mig-service-account))
          BBL_GCP_PROJECT_ID: app-runtime-interfaces-wg
          BBL_GCP_REGION: us-east4
          BBL_LB_CERT: ((kiki_lb.certificate))
          BBL_LB_KEY: ((kiki_lb.private_key))
          LB_DOMAIN: *kiki-domain
          TRUSTED_CA: ((relint_ca.certificate))
        ensure:
          put: kiki-mig-bbl-state
          params:
            repository: updated-bbl-state
            rebase: true
      - task: create-dns-record
        attempts: 3
        file: capi-ci/ci/bbl-tasks/create-dns-record.yml
        input_mapping:
          bbl-state: updated-bbl-state
        params:
          BBL_STATE_DIR: kiki-mig
          DNS_DOMAIN: *kiki-domain
          GCP_DNS_SERVICE_ACCOUNT_KEY: ((capi-bbl-dns-service-account))
          GCP_PROJECT_ID: app-runtime-interfaces-wg
          SHARED_DNS_ZONE_NAME: app-runtime-interfaces
      - task: run-bosh-cleanup
        file: capi-ci/ci/bbl-tasks/run-bosh-cleanup.yml
        input_mapping:
          bbl-state: updated-bbl-state
        params:
          BBL_STATE_DIR: kiki-mig
  - name: manual-cf-bbl-destroy-kiki-mig
    serial: true
    serial_groups:
      - kiki-mig
    plan:
      - in_parallel:
          - get: cf-deployment-concourse-tasks
          - get: kiki-mig-bbl-state
      - try:
          task: delete-deployment
          file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
          input_mapping:
            bbl-state: kiki-mig-bbl-state
          params:
            BBL_STATE_DIR: kiki-mig
            IGNORE_ERRORS: true
      - task: bbl-destroy-kiki-mig
        file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
        input_mapping:
          bbl-state: kiki-mig-bbl-state
          bbl-config: kiki-mig-bbl-state
        params:
          BBL_GCP_SERVICE_ACCOUNT_KEY: ((capi-bbl-kiki-mig-service-account))
          BBL_STATE_DIR: kiki-mig
        ensure:
          put: kiki-mig-bbl-state
          params:
            repository: updated-bbl-state
            rebase: true
  - name: asha-mysql-acquire-bbl-up-pool
    serial: true
    plan:
      - in_parallel:
          - get: nightly
            trigger: true
          - put: asha-mysql-pool
            params:
              acquire: true
        timeout: 4h
  - name: asha-mysql-release-pool-manual
    plan:
      - get: asha-mysql-pool
    ensure:
      try:
        put: asha-mysql-pool
        params:
          release: asha-mysql-pool
  - name: bbl-up-asha-mysql
    serial: true
    serial_groups:
      - asha-mysql
    plan:
      - in_parallel:
          - get: cf-deployment-concourse-tasks
          - get: asha-mysql-bbl-state
          - get: capi-ci
          - get: asha-mysql-pool
            passed:
              - asha-mysql-acquire-bbl-up-pool
            trigger: true
      - task: bbl-up-asha-mysql
        file: cf-deployment-concourse-tasks/bbl-up/task.yml
        input_mapping:
          bbl-state: asha-mysql-bbl-state
          bbl-config: asha-mysql-bbl-state
        params:
          BBL_STATE_DIR: asha-mysql/bbl-state
          BBL_CONFIG_DIR: asha-mysql/bbl-config
          BBL_IAAS: gcp
          BBL_ENV_NAME: asha-mysql
          BBL_GCP_SERVICE_ACCOUNT_KEY: ((capi-bbl-asha-service-account))
          BBL_GCP_PROJECT_ID: app-runtime-interfaces-wg
          BBL_GCP_REGION: europe-west3
          BBL_LB_CERT: ((asha_lb.certificate))
          BBL_LB_KEY: ((asha_lb.private_key))
          LB_DOMAIN: &asha-mysql-domain cf.asha.app-runtime-interfaces.ci.cloudfoundry.org
        ensure:
          put: asha-mysql-bbl-state
          params:
            repository: updated-bbl-state
            rebase: true
      - task: create-dns-record
        attempts: 3
        file: capi-ci/ci/bbl-tasks/create-dns-record.yml
        input_mapping:
          bbl-state: updated-bbl-state
        params:
          BBL_STATE_DIR: asha-mysql/bbl-state
          DNS_DOMAIN: *asha-mysql-domain
          GCP_DNS_SERVICE_ACCOUNT_KEY: ((capi-bbl-dns-service-account))
          GCP_PROJECT_ID: app-runtime-interfaces-wg
          SHARED_DNS_ZONE_NAME: app-runtime-interfaces
      - task: run-bosh-cleanup
        file: capi-ci/ci/bbl-tasks/run-bosh-cleanup.yml
        input_mapping:
          bbl-state: updated-bbl-state
        params:
          BBL_STATE_DIR: asha-mysql/bbl-state
      - put: asha-mysql-pool
        params:
          release: asha-mysql-pool
  - name: manual-bbl-destroy-asha-mysql
    serial: true
    serial_groups:
      - asha-mysql
    plan:
      - in_parallel:
          - get: cf-deployment-concourse-tasks
          - get: asha-mysql-bbl-state
      - task: manual-bbl-destroy-asha-mysql
        file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
        input_mapping:
          bbl-state: asha-mysql-bbl-state
          bbl-config: asha-mysql-bbl-state
        params:
          BBL_STATE_DIR: asha-mysql/bbl-state
          BBL_GCP_SERVICE_ACCOUNT_KEY: ((capi-bbl-asha-service-account))
        ensure:
          put: asha-mysql-bbl-state
          params:
            repository: updated-bbl-state
            rebase: true
  - name: olaf-mysql-acquire-bbl-up-pool
    serial: true
    plan:
      - in_parallel:
          - get: nightly
            trigger: true
          - put: olaf-mysql-pool
            params:
              acquire: true
        timeout: 4h
  - name: olaf-mysql-release-pool-manual
    plan:
      - get: olaf-mysql-pool
    ensure:
      try:
        put: olaf-mysql-pool
        params:
          release: olaf-mysql-pool
  - name: bbl-up-olaf-mysql
    serial: true
    serial_groups:
      - olaf-mysql
    plan:
      - in_parallel:
          - get: cf-deployment-concourse-tasks
          - get: olaf-mysql-bbl-state
          - get: capi-ci
          - get: olaf-mysql-pool
            passed:
              - olaf-mysql-acquire-bbl-up-pool
            trigger: true
      - task: bbl-up-olaf-mysql
        file: cf-deployment-concourse-tasks/bbl-up/task.yml
        input_mapping:
          bbl-state: olaf-mysql-bbl-state
          bbl-config: olaf-mysql-bbl-state
        params:
          BBL_STATE_DIR: olaf-mysql/bbl-state
          BBL_CONFIG_DIR: olaf-mysql/bbl-config
          BBL_IAAS: aws
          BBL_ENV_NAME: olaf-mysql
          BBL_AWS_ACCESS_KEY_ID: ((capi-bbl-olaf-aws-access-key))
          BBL_AWS_SECRET_ACCESS_KEY: ((capi-bbl-olaf-aws-secret-key))
          BBL_AWS_REGION: eu-central-1
          BBL_LB_CERT: ((olaf_lb.certificate))
          BBL_LB_KEY: ((olaf_lb.private_key))
          LB_DOMAIN: &olaf-mysql-domain cf.olaf.app-runtime-interfaces.ci.cloudfoundry.org
        ensure:
          put: olaf-mysql-bbl-state
          params:
            repository: updated-bbl-state
            rebase: true
      - task: create-dns-record
        attempts: 3
        file: capi-ci/ci/bbl-tasks/create-dns-record.yml
        input_mapping:
          bbl-state: updated-bbl-state
        params:
          BBL_STATE_DIR: olaf-mysql/bbl-state
          DNS_DOMAIN: *olaf-mysql-domain
          GCP_DNS_SERVICE_ACCOUNT_KEY: ((capi-bbl-dns-service-account))
          GCP_PROJECT_ID: app-runtime-interfaces-wg
          SHARED_DNS_ZONE_NAME: app-runtime-interfaces
      - task: run-bosh-cleanup
        file: capi-ci/ci/bbl-tasks/run-bosh-cleanup.yml
        input_mapping:
          bbl-state: updated-bbl-state
        params:
          BBL_STATE_DIR: olaf-mysql/bbl-state
      - put: olaf-mysql-pool
        params:
          release: olaf-mysql-pool
  - name: manual-bbl-destroy-olaf-mysql
    serial: true
    serial_groups:
      - olaf-mysql
    plan:
      - in_parallel:
          - get: cf-deployment-concourse-tasks
          - get: olaf-mysql-bbl-state
      - task: manual-bbl-destroy-olaf-mysql
        file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
        input_mapping:
          bbl-state: olaf-mysql-bbl-state
          bbl-config: olaf-mysql-bbl-state
        params:
          BBL_STATE_DIR: olaf-mysql/bbl-state
          BBL_AWS_ACCESS_KEY_ID: ((capi-bbl-olaf-aws-access-key))
          BBL_AWS_SECRET_ACCESS_KEY: ((capi-bbl-olaf-aws-secret-key))
        ensure:
          put: olaf-mysql-bbl-state
          params:
            repository: updated-bbl-state
            rebase: true
  - name: scar-psql-acquire-bbl-up-pool
    serial: true
    plan:
      - in_parallel:
          - get: nightly
            trigger: true
          - put: scar-psql-pool
            params:
              acquire: true
        timeout: 4h
  - name: scar-psql-release-pool-manual
    plan:
      - get: scar-psql-pool
    ensure:
      try:
        put: scar-psql-pool
        params:
          release: scar-psql-pool
  - name: bbl-up-scar-psql
    serial: true
    serial_groups:
      - scar-psql
    plan:
      - in_parallel:
          - get: cf-deployment-concourse-tasks
          - get: scar-psql-bbl-state
          - get: capi-ci
          - get: scar-psql-pool
            passed:
              - scar-psql-acquire-bbl-up-pool
            trigger: true
      - task: bbl-up-scar-psql
        file: cf-deployment-concourse-tasks/bbl-up/task.yml
        input_mapping:
          bbl-state: scar-psql-bbl-state
          bbl-config: scar-psql-bbl-state
        params:
          BBL_STATE_DIR: scar-psql/bbl-state
          BBL_CONFIG_DIR: scar-psql/bbl-config
          BBL_IAAS: gcp
          BBL_ENV_NAME: scar-psql
          BBL_GCP_SERVICE_ACCOUNT_KEY: ((capi-bbl-scar-service-account))
          BBL_GCP_PROJECT_ID: app-runtime-interfaces-wg
          BBL_GCP_REGION: europe-west3
          BBL_LB_CERT: ((scar_lb.certificate))
          BBL_LB_KEY: ((scar_lb.private_key))
          LB_DOMAIN: &scar-psql-domain cf.scar.app-runtime-interfaces.ci.cloudfoundry.org
        ensure:
          put: scar-psql-bbl-state
          params:
            repository: updated-bbl-state
            rebase: true
      - task: create-dns-record
        attempts: 3
        file: capi-ci/ci/bbl-tasks/create-dns-record.yml
        input_mapping:
          bbl-state: updated-bbl-state
        params:
          BBL_STATE_DIR: scar-psql/bbl-state
          DNS_DOMAIN: *scar-psql-domain
          GCP_DNS_SERVICE_ACCOUNT_KEY: ((capi-bbl-dns-service-account))
          GCP_PROJECT_ID: app-runtime-interfaces-wg
          SHARED_DNS_ZONE_NAME: app-runtime-interfaces
      - task: run-bosh-cleanup
        file: capi-ci/ci/bbl-tasks/run-bosh-cleanup.yml
        input_mapping:
          bbl-state: updated-bbl-state
        params:
          BBL_STATE_DIR: scar-psql/bbl-state
      - put: scar-psql-pool
        params:
          release: scar-psql-pool
  - name: manual-bbl-destroy-scar-psql
    serial: true
    serial_groups:
      - scar-psql
    plan:
      - in_parallel:
          - get: cf-deployment-concourse-tasks
          - get: scar-psql-bbl-state
      - task: manual-bbl-destroy-scar-psql
        file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
        input_mapping:
          bbl-state: scar-psql-bbl-state
          bbl-config: scar-psql-bbl-state
        params:
          BBL_STATE_DIR: scar-psql/bbl-state
          BBL_GCP_SERVICE_ACCOUNT_KEY: ((capi-bbl-scar-service-account))
        ensure:
          put: scar-psql-bbl-state
          params:
            repository: updated-bbl-state
            rebase: true
  - name: emergency-bbl-destroy-elsa-ha
    serial: true
    serial_groups:
      - elsa-ha
    plan:
      - in_parallel:
          - get: cf-deployment-concourse-tasks
          - get: elsa-ha-bbl-state
      - try:
          task: delete-deployment
          file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
          input_mapping:
            bbl-state: elsa-ha-bbl-state
          params:
            BBL_STATE_DIR: elsa-ha/bbl-state
            IGNORE_ERRORS: true
      - task: emergency-bbl-destroy-elsa-ha
        file: cf-deployment-concourse-tasks/bbl-destroy/task.yml
        input_mapping:
          bbl-state: elsa-ha-bbl-state
          bbl-config: elsa-ha-bbl-state
        params:
          BBL_STATE_DIR: elsa-ha/bbl-state
          BBL_GCP_SERVICE_ACCOUNT_KEY: ((capi-bbl-elsa-ha-service-account))
        ensure:
          put: elsa-ha-bbl-state
          params:
            repository: updated-bbl-state
            rebase: true
  - name: merge-capi-release-main
    serial: true
    plan:
      - in_parallel:
          - get: capi-ci
          - get: capi-release-main
            passed:
              - ship-it
            trigger: true
          - get: capi-release
            resource: capi-release-develop
      - task: merge-main-into-develop
        file: capi-ci/ci/git/merge_main_into_develop.yml
      - put: capi-release-develop
        params:
          repository: merged/capi-release
  - name: bump-ci-passed
    serial: true
    plan:
      - in_parallel:
          - get: capi-release-tarball
            passed:
              - elsa-ha-tests
              - kiki-back-compat-migrations
              - asha-mysql-destroy-cf
              - olaf-mysql-destroy-cf
              - scar-psql-destroy-cf
            trigger: true
      - put: capi-release-ci-passed
        params:
          repository: capi-release
  - name: asha-mysql-acquire-pool
    serial: true
    plan:
      - in_parallel:
          - get: capi-release-tarball
            passed:
              - create-capi-release
            trigger: true
          - put: asha-mysql-pool
            params:
              acquire: true
        timeout: 4h
  - name: asha-mysql-deploy-cf
    serial: true
    serial_groups:
      - asha-mysql
    plan:
      - in_parallel:
          - get: asha-mysql-pool
            passed:
              - asha-mysql-acquire-pool
            trigger: true
          - get: cf-deployment-concourse-tasks
          - get: asha-mysql-bbl-state
          - get: capi-ci
          - get: capi-release-tarball
          - get: cf-deployment
          - get: runtime-ci
          - get: asha-mysql-integration-configs
      - task: delete-deployment
        file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
        input_mapping:
          bbl-state: asha-mysql-bbl-state
        params:
          BBL_STATE_DIR: asha-mysql/bbl-state
          IGNORE_ERRORS: true
      - task: stemcell-upload
        file: cf-deployment-concourse-tasks/bosh-upload-stemcells/task.yml
        input_mapping:
          bbl-state: asha-mysql-bbl-state
        params:
          BBL_STATE_DIR: asha-mysql/bbl-state
      - task: upload-capi-release-tarball
        file: capi-ci/ci/bosh/upload_capi_release_tarball.yml
        input_mapping:
          bbl-state: asha-mysql-bbl-state
          release-tarball: capi-release-tarball
        params:
          BBL_STATE_DIR: asha-mysql/bbl-state
      - task: collect-ops-files
        file: cf-deployment-concourse-tasks/collect-ops-files/task.yml
        input_mapping:
          base-ops-files: cf-deployment
          new-ops-files: capi-ci
        params:
          NEW_OPS_FILES: |
            cf-deployment-operations/use-latest-capi.yml
            cf-deployment-operations/scale-up-cells.yml
            cf-deployment-operations/scale-generic-worker-processes.yml
            cf-deployment-operations/disable-uaa-get-requests.yml
            cf-deployment-operations/seed-credhub-asg.yml
            cf-deployment-operations/seed-uaa-asg.yml
      - task: deploy
        file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
        input_mapping:
          bbl-state: asha-mysql-bbl-state
          ops-files: collected-ops-files
          vars-files: asha-mysql-bbl-state
        params:
          BBL_STATE_DIR: asha-mysql/bbl-state
          SYSTEM_DOMAIN: *asha-mysql-domain
          OPS_FILES: |
            base-ops-files/operations/use-compiled-releases.yml
            use-latest-capi.yml
            scale-up-cells.yml
            scale-generic-worker-processes.yml
            disable-uaa-get-requests.yml
            seed-credhub-asg.yml
            base-ops-files/operations/scale-database-cluster.yml
            base-ops-files/operations/test/speed-up-dynamic-asgs.yml
            seed-uaa-asg.yml
      - task: ensure-api-healthy
        file: runtime-ci/tasks/ensure-api-healthy/task.yml
        input_mapping:
          cats-integration-config: asha-mysql-integration-configs
        params:
          CONFIG_FILE_PATH: asha-mysql/cats_integration_config.json
  - name: asha-mysql-tests
    serial: true
    serial_groups:
      - asha-mysql
    plan:
      - in_parallel:
          - get: capi-ci
          - get: cf-deployment-concourse-tasks
          - get: capi-release-tarball
          - get: asha-mysql-pool
            passed:
              - asha-mysql-deploy-cf
            trigger: true
          - get: asha-mysql-bbl-state
          - get: asha-mysql-integration-configs
          - get: cf-acceptance-tests
          - get: sync-integration-tests
          - get: capi-bara-tests
      - task: updated-integration-configs
        file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
        input_mapping:
          bbl-state: asha-mysql-bbl-state
          integration-configs: asha-mysql-integration-configs
        params:
          CATS_INTEGRATION_CONFIG_FILE: asha-mysql/cats_integration_config.json
          BBL_STATE_DIR: asha-mysql/bbl-state
          SYSTEM_DOMAIN: *asha-mysql-domain
        ensure:
          put: asha-mysql-integration-configs
          params:
            repository: updated-integration-configs
            rebase: true
      - task: updated-baras-integration-configs
        file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
        input_mapping:
          bbl-state: asha-mysql-bbl-state
          integration-configs: updated-integration-configs
        params:
          CATS_INTEGRATION_CONFIG_FILE: asha-mysql/baras_integration_config.json
          BBL_STATE_DIR: asha-mysql/bbl-state
          SYSTEM_DOMAIN: *asha-mysql-domain
        ensure:
          put: asha-mysql-integration-configs
          params:
            repository: updated-integration-configs
            rebase: true
      - task: enable-feature-flags
        file: cf-deployment-concourse-tasks/set-feature-flags/task.yml
        input_mapping:
          bbl-state: asha-mysql-bbl-state
        params:
          SYSTEM_DOMAIN: *asha-mysql-domain
          BBL_STATE_DIR: asha-mysql/bbl-state
          ENABLED_FEATURE_FLAGS: diego_docker
      - in_parallel:
          - task: acceptance-tests
            attempts: 3
            file: cf-deployment-concourse-tasks/run-cats/task.yml
            input_mapping:
              integration-config: updated-integration-configs
            params:
              NODES: 10
              CONFIG_FILE_PATH: asha-mysql/cats_integration_config.json
              CAPTURE_LOGS: true
              SKIP_REGEXP: "shows logs and metrics"
          - task: capi-bara-tests
            attempts: 3
            file: capi-ci/ci/baras/run-baras.yml
            input_mapping:
              integration-config: updated-integration-configs
            params:
              NODES: 6
              FLAKE_ATTEMPTS: 2
              CONFIG_FILE_PATH: asha-mysql/baras_integration_config.json
          - task: sync-integration-tests
            attempts: 3
            file: sync-integration-tests/concourse/task_with_credhub.yml
            input_mapping:
              environment: updated-integration-configs
            params:
              BOSH_DEPLOYMENT_NAME: cf
              BOSH_API_INSTANCE: api/0
              CF_API_TARGET: https://api.cf.asha.app-runtime-interfaces.ci.cloudfoundry.org
              CF_SKIP_SSL_VALIDATION: true
              CF_APPS_DOMAIN: *asha-mysql-domain
              BBL_STATE_DIR: asha-mysql/bbl-state
              USE_CREDHUB: true
              RUN_REVISIONS_TESTS: true
              FLAKE_ATTEMPTS: 2
  - name: asha-mysql-destroy-cf
    serial: true
    serial_groups:
      - asha-mysql
    plan:
      - in_parallel:
          - get: cf-deployment-concourse-tasks
          - get: capi-release-tarball
          - get: asha-mysql-pool
            passed:
              - asha-mysql-tests
            trigger: true
          - get: asha-mysql-bbl-state
      - task: delete-deployment
        file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
        input_mapping:
          bbl-state: asha-mysql-bbl-state
        params:
          BBL_STATE_DIR: asha-mysql/bbl-state
          IGNORE_ERRORS: true
      - put: asha-mysql-pool
        params:
          release: asha-mysql-pool
  - name: olaf-mysql-acquire-pool
    serial: true
    plan:
      - in_parallel:
          - get: capi-release-tarball
            passed:
              - create-capi-release
            trigger: true
          - put: olaf-mysql-pool
            params:
              acquire: true
        timeout: 4h
  - name: olaf-mysql-deploy-cf
    serial: true
    serial_groups:
      - olaf-mysql
    plan:
      - in_parallel:
          - get: olaf-mysql-pool
            passed:
              - olaf-mysql-acquire-pool
            trigger: true
          - get: cf-deployment-concourse-tasks
          - get: olaf-mysql-bbl-state
          - get: capi-ci
          - get: capi-release-tarball
          - get: cf-deployment
          - get: runtime-ci
          - get: olaf-mysql-integration-configs
      - task: delete-deployment
        file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
        input_mapping:
          bbl-state: olaf-mysql-bbl-state
        params:
          BBL_STATE_DIR: olaf-mysql/bbl-state
          IGNORE_ERRORS: true
      - task: stemcell-upload
        file: cf-deployment-concourse-tasks/bosh-upload-stemcells/task.yml
        input_mapping:
          bbl-state: olaf-mysql-bbl-state
        params:
          BBL_STATE_DIR: olaf-mysql/bbl-state
          INFRASTRUCTURE: aws
      - task: upload-capi-release-tarball
        file: capi-ci/ci/bosh/upload_capi_release_tarball.yml
        input_mapping:
          bbl-state: olaf-mysql-bbl-state
          release-tarball: capi-release-tarball
        params:
          BBL_STATE_DIR: olaf-mysql/bbl-state
      - task: collect-ops-files
        file: cf-deployment-concourse-tasks/collect-ops-files/task.yml
        input_mapping:
          base-ops-files: cf-deployment
          new-ops-files: capi-ci
        params:
          NEW_OPS_FILES: |
            cf-deployment-operations/use-latest-capi.yml
            cf-deployment-operations/scale-up-cells.yml
            cf-deployment-operations/scale-generic-worker-processes.yml
            cf-deployment-operations/disable-uaa-get-requests.yml
            cf-deployment-operations/seed-credhub-asg.yml
            cf-deployment-operations/seed-uaa-asg.yml
      - task: deploy
        file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
        input_mapping:
          bbl-state: olaf-mysql-bbl-state
          ops-files: collected-ops-files
          vars-files: olaf-mysql-bbl-state
        params:
          BBL_STATE_DIR: olaf-mysql/bbl-state
          SYSTEM_DOMAIN: *olaf-mysql-domain
          OPS_FILES: |
            base-ops-files/operations/aws.yml
            base-ops-files/operations/use-external-blobstore.yml
            base-ops-files/operations/use-s3-blobstore.yml
            base-ops-files/operations/use-compiled-releases.yml
            use-latest-capi.yml
            scale-up-cells.yml
            scale-generic-worker-processes.yml
            disable-uaa-get-requests.yml
            seed-credhub-asg.yml
            base-ops-files/operations/scale-database-cluster.yml
            base-ops-files/operations/test/speed-up-dynamic-asgs.yml
            seed-uaa-asg.yml
          VARS_FILES: |
            olaf-mysql/bbl-state/vars/director-vars-file.yml
      - task: ensure-api-healthy
        file: runtime-ci/tasks/ensure-api-healthy/task.yml
        input_mapping:
          cats-integration-config: olaf-mysql-integration-configs
        params:
          CONFIG_FILE_PATH: olaf-mysql/cats_integration_config.json
  - name: olaf-mysql-tests
    serial: true
    serial_groups:
      - olaf-mysql
    plan:
      - in_parallel:
          - get: capi-ci
          - get: cf-deployment-concourse-tasks
          - get: capi-release-tarball
          - get: olaf-mysql-pool
            passed:
              - olaf-mysql-deploy-cf
            trigger: true
          - get: olaf-mysql-bbl-state
          - get: olaf-mysql-integration-configs
          - get: cf-acceptance-tests
          - get: sync-integration-tests
          - get: capi-bara-tests
      - task: updated-integration-configs
        file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
        input_mapping:
          bbl-state: olaf-mysql-bbl-state
          integration-configs: olaf-mysql-integration-configs
        params:
          CATS_INTEGRATION_CONFIG_FILE: olaf-mysql/cats_integration_config.json
          BBL_STATE_DIR: olaf-mysql/bbl-state
          SYSTEM_DOMAIN: *olaf-mysql-domain
        ensure:
          put: olaf-mysql-integration-configs
          params:
            repository: updated-integration-configs
            rebase: true
      - task: updated-baras-integration-configs
        file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
        input_mapping:
          bbl-state: olaf-mysql-bbl-state
          integration-configs: updated-integration-configs
        params:
          CATS_INTEGRATION_CONFIG_FILE: olaf-mysql/baras_integration_config.json
          BBL_STATE_DIR: olaf-mysql/bbl-state
          SYSTEM_DOMAIN: *olaf-mysql-domain
        ensure:
          put: olaf-mysql-integration-configs
          params:
            repository: updated-integration-configs
            rebase: true
      - task: enable-feature-flags
        file: cf-deployment-concourse-tasks/set-feature-flags/task.yml
        input_mapping:
          bbl-state: olaf-mysql-bbl-state
        params:
          SYSTEM_DOMAIN: *olaf-mysql-domain
          BBL_STATE_DIR: olaf-mysql/bbl-state
          ENABLED_FEATURE_FLAGS: diego_docker
      - in_parallel:
          - task: acceptance-tests
            attempts: 3
            file: cf-deployment-concourse-tasks/run-cats/task.yml
            input_mapping:
              integration-config: updated-integration-configs
            params:
              NODES: 10
              CONFIG_FILE_PATH: olaf-mysql/cats_integration_config.json
              CAPTURE_LOGS: true
          - task: capi-bara-tests
            attempts: 3
            file: capi-ci/ci/baras/run-baras.yml
            input_mapping:
              integration-config: updated-integration-configs
            params:
              NODES: 6
              FLAKE_ATTEMPTS: 2
              CONFIG_FILE_PATH: olaf-mysql/baras_integration_config.json
          - task: sync-integration-tests
            attempts: 3
            file: sync-integration-tests/concourse/task_with_credhub.yml
            input_mapping:
              environment: updated-integration-configs
            params:
              BOSH_DEPLOYMENT_NAME: cf
              BOSH_API_INSTANCE: api/0
              CF_API_TARGET: https://api.cf.olaf.app-runtime-interfaces.ci.cloudfoundry.org
              CF_SKIP_SSL_VALIDATION: true
              CF_APPS_DOMAIN: *olaf-mysql-domain
              BBL_STATE_DIR: olaf-mysql/bbl-state
              USE_CREDHUB: true
              RUN_REVISIONS_TESTS: true
              FLAKE_ATTEMPTS: 2
      - task: extract-bbl-environment
        file: capi-ci/ci/bbl-tasks/extract_bbl_environment.yml
        input_mapping:
          capi-ci-private: olaf-mysql-bbl-state
        params:
          ENV_NAME: olaf-mysql
          BBL_STATE_DIR: olaf-mysql/bbl-state
      - task: run-blobstore-benchmarks
        file: capi-ci/ci/benchmarks/run-blobstore-benchmarks.yml
        input_mapping:
          capi-ci-private: olaf-mysql-bbl-state
        privileged: true
        params:
          BBL_STATE_DIR: olaf-mysql/bbl-state
  - name: olaf-mysql-destroy-cf
    serial: true
    serial_groups:
      - olaf-mysql
    plan:
      - in_parallel:
          - get: cf-deployment-concourse-tasks
          - get: capi-release-tarball
          - get: olaf-mysql-pool
            passed:
              - olaf-mysql-tests
            trigger: true
          - get: olaf-mysql-bbl-state
      - task: delete-deployment
        file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
        input_mapping:
          bbl-state: olaf-mysql-bbl-state
        params:
          BBL_STATE_DIR: olaf-mysql/bbl-state
          IGNORE_ERRORS: true
      - put: olaf-mysql-pool
        params:
          release: olaf-mysql-pool
  - name: scar-psql-acquire-pool
    serial: true
    plan:
      - in_parallel:
          - get: capi-release-tarball
            passed:
              - create-capi-release
            trigger: true
          - put: scar-psql-pool
            params:
              acquire: true
        timeout: 4h
  - name: scar-psql-deploy-cf
    serial: true
    serial_groups:
      - scar-psql
    plan:
      - in_parallel:
          - get: scar-psql-pool
            passed:
              - scar-psql-acquire-pool
            trigger: true
          - get: cf-deployment-concourse-tasks
          - get: scar-psql-bbl-state
          - get: capi-ci
          - get: capi-release-tarball
          - get: cf-deployment
          - get: runtime-ci
          - get: scar-psql-integration-configs
      - task: delete-deployment
        file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
        input_mapping:
          bbl-state: scar-psql-bbl-state
        params:
          BBL_STATE_DIR: scar-psql/bbl-state
          IGNORE_ERRORS: true
      - task: stemcell-upload
        file: cf-deployment-concourse-tasks/bosh-upload-stemcells/task.yml
        input_mapping:
          bbl-state: scar-psql-bbl-state
        params:
          BBL_STATE_DIR: scar-psql/bbl-state
      - task: upload-capi-release-tarball
        file: capi-ci/ci/bosh/upload_capi_release_tarball.yml
        input_mapping:
          bbl-state: scar-psql-bbl-state
          release-tarball: capi-release-tarball
        params:
          BBL_STATE_DIR: scar-psql/bbl-state
      - task: collect-ops-files
        file: cf-deployment-concourse-tasks/collect-ops-files/task.yml
        input_mapping:
          base-ops-files: cf-deployment
          new-ops-files: capi-ci
        params:
          NEW_OPS_FILES: |
            cf-deployment-operations/use-latest-capi.yml
            cf-deployment-operations/scale-up-cells.yml
            cf-deployment-operations/scale-generic-worker-processes.yml
            cf-deployment-operations/disable-uaa-get-requests.yml
            cf-deployment-operations/seed-credhub-asg.yml
            cf-deployment-operations/seed-uaa-asg.yml
      - task: deploy
        file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
        input_mapping:
          bbl-state: scar-psql-bbl-state
          ops-files: collected-ops-files
          vars-files: scar-psql-bbl-state
        params:
          BBL_STATE_DIR: scar-psql/bbl-state
          SYSTEM_DOMAIN: *scar-psql-domain
          OPS_FILES: |
            base-ops-files/operations/use-compiled-releases.yml
            base-ops-files/operations/use-postgres.yml
            use-latest-capi.yml
            scale-up-cells.yml
            scale-generic-worker-processes.yml
            disable-uaa-get-requests.yml
            seed-credhub-asg.yml
            base-ops-files/operations/test/speed-up-dynamic-asgs.yml
            seed-uaa-asg.yml
      - task: ensure-api-healthy
        file: runtime-ci/tasks/ensure-api-healthy/task.yml
        input_mapping:
          cats-integration-config: scar-psql-integration-configs
        params:
          CONFIG_FILE_PATH: scar-psql/cats_integration_config.json
  - name: scar-psql-tests
    serial: true
    serial_groups:
      - scar-psql
    plan:
      - in_parallel:
          - get: capi-ci
          - get: cf-deployment-concourse-tasks
          - get: capi-release-tarball
          - get: scar-psql-pool
            passed:
              - scar-psql-deploy-cf
            trigger: true
          - get: scar-psql-bbl-state
          - get: scar-psql-integration-configs
          - get: cf-acceptance-tests
          - get: sync-integration-tests
          - get: capi-bara-tests
      - task: updated-integration-configs
        file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
        input_mapping:
          bbl-state: scar-psql-bbl-state
          integration-configs: scar-psql-integration-configs
        params:
          CATS_INTEGRATION_CONFIG_FILE: scar-psql/cats_integration_config.json
          BBL_STATE_DIR: scar-psql/bbl-state
          SYSTEM_DOMAIN: *scar-psql-domain
        ensure:
          put: scar-psql-integration-configs
          params:
            repository: updated-integration-configs
            rebase: true
      - task: updated-baras-integration-configs
        file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
        input_mapping:
          bbl-state: scar-psql-bbl-state
          integration-configs: updated-integration-configs
        params:
          CATS_INTEGRATION_CONFIG_FILE: scar-psql/baras_integration_config.json
          BBL_STATE_DIR: scar-psql/bbl-state
          SYSTEM_DOMAIN: *scar-psql-domain
        ensure:
          put: scar-psql-integration-configs
          params:
            repository: updated-integration-configs
            rebase: true
      - task: enable-feature-flags
        file: cf-deployment-concourse-tasks/set-feature-flags/task.yml
        input_mapping:
          bbl-state: scar-psql-bbl-state
        params:
          SYSTEM_DOMAIN: *scar-psql-domain
          BBL_STATE_DIR: scar-psql/bbl-state
          ENABLED_FEATURE_FLAGS: diego_docker
      - in_parallel:
          - task: acceptance-tests
            attempts: 3
            file: cf-deployment-concourse-tasks/run-cats/task.yml
            input_mapping:
              integration-config: updated-integration-configs
            params:
              NODES: 10
              CONFIG_FILE_PATH: scar-psql/cats_integration_config.json
              CAPTURE_LOGS: true
              SKIP_REGEXP: "shows logs and metrics"
          - task: capi-bara-tests
            attempts: 3
            file: capi-ci/ci/baras/run-baras.yml
            input_mapping:
              integration-config: updated-integration-configs
            params:
              NODES: 6
              FLAKE_ATTEMPTS: 2
              CONFIG_FILE_PATH: scar-psql/baras_integration_config.json
          - task: sync-integration-tests
            attempts: 3
            file: sync-integration-tests/concourse/task_with_credhub.yml
            input_mapping:
              environment: updated-integration-configs
            params:
              BOSH_DEPLOYMENT_NAME: cf
              BOSH_API_INSTANCE: api/0
              CF_API_TARGET: https://api.cf.scar.app-runtime-interfaces.ci.cloudfoundry.org
              CF_SKIP_SSL_VALIDATION: true
              CF_APPS_DOMAIN: *scar-psql-domain
              BBL_STATE_DIR: scar-psql/bbl-state
              USE_CREDHUB: true
              RUN_REVISIONS_TESTS: true
              FLAKE_ATTEMPTS: 2
  - name: scar-psql-destroy-cf
    serial: true
    serial_groups:
      - scar-psql
    plan:
      - in_parallel:
          - get: cf-deployment-concourse-tasks
          - get: capi-release-tarball
          - get: scar-psql-pool
            passed:
              - scar-psql-tests
            trigger: true
          - get: scar-psql-bbl-state
      - task: delete-deployment
        file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
        input_mapping:
          bbl-state: scar-psql-bbl-state
        params:
          BBL_STATE_DIR: scar-psql/bbl-state
          IGNORE_ERRORS: true
      - put: scar-psql-pool
        params:
          release: scar-psql-pool
  - name: elsa-ha-acquire-pool
    serial: true
    plan:
      - in_parallel:
          - get: capi-release-tarball
            passed:
              - create-capi-release
            trigger: true
          - put: elsa-ha-pool
            params:
              acquire: true
        timeout: 4h
  - name: elsa-ha-deploy-cf
    serial: true
    serial_groups:
      - elsa-ha
    plan:
      - in_parallel:
          - get: elsa-ha-pool
            passed:
              - elsa-ha-acquire-pool
            trigger: true
          - get: cf-deployment-concourse-tasks
          - get: elsa-ha-bbl-state
          - get: capi-ci
          - get: capi-release-tarball
          - get: cf-deployment
          - get: runtime-ci
          - get: elsa-ha-integration-configs
      - task: stemcell-upload
        file: cf-deployment-concourse-tasks/bosh-upload-stemcells/task.yml
        input_mapping:
          bbl-state: elsa-ha-bbl-state
        params:
          BBL_STATE_DIR: elsa-ha/bbl-state
      - task: upload-capi-release-tarball
        file: capi-ci/ci/bosh/upload_capi_release_tarball.yml
        input_mapping:
          bbl-state: elsa-ha-bbl-state
          release-tarball: capi-release-tarball
        params:
          BBL_STATE_DIR: elsa-ha/bbl-state
      - task: collect-ops-files
        file: cf-deployment-concourse-tasks/collect-ops-files/task.yml
        input_mapping:
          base-ops-files: cf-deployment
          new-ops-files: capi-ci
        params:
          NEW_OPS_FILES: |
            cf-deployment-operations/use-latest-capi.yml
            cf-deployment-operations/scale-up-cells.yml
            cf-deployment-operations/scale-generic-worker-processes.yml
            cf-deployment-operations/disable-uaa-get-requests.yml
            cf-deployment-operations/seed-credhub-asg.yml
            cf-deployment-operations/seed-uaa-asg.yml
            cf-deployment-operations/disable-skip-cert-verify.yml
            cf-deployment-operations/disable-skip-cert-verify-iso-seg.yml
      - task: deploy
        file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
        input_mapping:
          bbl-state: elsa-ha-bbl-state
          ops-files: collected-ops-files
          vars-files: elsa-ha-bbl-state
        params:
          BBL_STATE_DIR: elsa-ha/bbl-state
          SYSTEM_DOMAIN: *elsa-ha-domain
          OPS_FILES: |
            base-ops-files/operations/add-persistent-isolation-segment-diego-cell.yml
            base-ops-files/operations/windows2019-cell.yml
            base-ops-files/operations/use-online-windows2019fs.yml
            base-ops-files/operations/use-external-blobstore.yml
            base-ops-files/operations/use-gcs-blobstore-service-account.yml
            base-ops-files/operations/use-compiled-releases.yml
            base-ops-files/operations/experimental/use-compiled-releases-windows.yml
            use-latest-capi.yml
            scale-up-cells.yml
            scale-generic-worker-processes.yml
            disable-uaa-get-requests.yml
            seed-credhub-asg.yml
            base-ops-files/operations/scale-database-cluster.yml
            base-ops-files/operations/test/speed-up-dynamic-asgs.yml
            seed-uaa-asg.yml
            disable-skip-cert-verify.yml
            disable-skip-cert-verify-iso-seg.yml
          VARS_FILES: |
            elsa-ha/gcs-storage-vars.yml
      - task: ensure-api-healthy
        file: runtime-ci/tasks/ensure-api-healthy/task.yml
        input_mapping:
          cats-integration-config: elsa-ha-integration-configs
        params:
          CONFIG_FILE_PATH: elsa-ha/cats_integration_config.json
  - name: elsa-ha-tests
    serial: true
    serial_groups:
      - elsa-ha
    plan:
      - in_parallel:
          - get: capi-ci
          - get: cf-deployment-concourse-tasks
          - get: capi-release-tarball
          - get: elsa-ha-pool
            passed:
              - elsa-ha-deploy-cf
            trigger: true
          - get: elsa-ha-bbl-state
          - get: elsa-ha-integration-configs
          - get: cf-acceptance-tests
          - get: sync-integration-tests
          - get: capi-bara-tests
      - task: updated-integration-configs
        file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
        input_mapping:
          bbl-state: elsa-ha-bbl-state
          integration-configs: elsa-ha-integration-configs
        params:
          CATS_INTEGRATION_CONFIG_FILE: elsa-ha/cats_integration_config.json
          BBL_STATE_DIR: elsa-ha/bbl-state
          SYSTEM_DOMAIN: *elsa-ha-domain
        ensure:
          put: elsa-ha-integration-configs
          params:
            repository: updated-integration-configs
            rebase: true
      - task: updated-baras-integration-configs
        file: cf-deployment-concourse-tasks/update-integration-configs/task.yml
        input_mapping:
          bbl-state: elsa-ha-bbl-state
          integration-configs: updated-integration-configs
        params:
          CATS_INTEGRATION_CONFIG_FILE: elsa-ha/baras_integration_config.json
          BBL_STATE_DIR: elsa-ha/bbl-state
          SYSTEM_DOMAIN: *elsa-ha-domain
        ensure:
          put: elsa-ha-integration-configs
          params:
            repository: updated-integration-configs
            rebase: true
      - task: enable-feature-flags
        file: cf-deployment-concourse-tasks/set-feature-flags/task.yml
        input_mapping:
          bbl-state: elsa-ha-bbl-state
        params:
          SYSTEM_DOMAIN: *elsa-ha-domain
          BBL_STATE_DIR: elsa-ha/bbl-state
          ENABLED_FEATURE_FLAGS: diego_docker
      - task: cleanup-acceptance-test-leftovers
        file: capi-ci/ci/acceptance-test-utils/cats_cleanup.yml
        input_mapping:
          capi-ci-private: elsa-ha-bbl-state
        params:
          CF_API_TARGET: &elsa-ha-api-url https://api.cf.elsa.app-runtime-interfaces.ci.cloudfoundry.org
          BBL_STATE_DIR: elsa-ha/bbl-state
      - in_parallel:
          - task: acceptance-tests
            attempts: 3
            file: cf-deployment-concourse-tasks/run-cats/task.yml
            input_mapping:
              integration-config: updated-integration-configs
            params:
              NODES: 10
              CONFIG_FILE_PATH: elsa-ha/cats_integration_config.json
              CAPTURE_LOGS: true
              SKIP_REGEXP: "shows logs and metrics"
          - task: capi-bara-tests
            attempts: 3
            file: capi-ci/ci/baras/run-baras.yml
            input_mapping:
              integration-config: updated-integration-configs
            params:
              NODES: 6
              FLAKE_ATTEMPTS: 2
              CONFIG_FILE_PATH: elsa-ha/baras_integration_config.json
          - task: sync-integration-tests
            attempts: 3
            file: sync-integration-tests/concourse/task_with_credhub.yml
            input_mapping:
              environment: updated-integration-configs
            params:
              BOSH_DEPLOYMENT_NAME: cf
              BOSH_API_INSTANCE: api/0
              CF_API_TARGET: *elsa-ha-api-url
              CF_SKIP_SSL_VALIDATION: true
              CF_APPS_DOMAIN: *elsa-ha-domain
              BBL_STATE_DIR: elsa-ha/bbl-state
              USE_CREDHUB: true
              RUN_REVISIONS_TESTS: true
              FLAKE_ATTEMPTS: 2
      - task: extract-bbl-environment
        file: capi-ci/ci/bbl-tasks/extract_bbl_environment.yml
        input_mapping:
          capi-ci-private: elsa-ha-bbl-state
        params:
          ENV_NAME: elsa-ha
          BBL_STATE_DIR: elsa-ha/bbl-state
      - task: run-blobstore-benchmarks
        file: capi-ci/ci/benchmarks/run-blobstore-benchmarks.yml
        input_mapping:
          capi-ci-private: elsa-ha-bbl-state
        privileged: true
        params:
          BBL_STATE_DIR: elsa-ha/bbl-state
      - put: elsa-ha-pool
        params:
          release: elsa-ha-pool
